<apex:page id="ChatTranscriptDetailPage" standardController="LiveChatTranscript" showHeader="true" extensions="ChatTranscriptDetailController">

    <apex:includeScript value="/support/console/47.0/integration.js" />
    
    <apex:form >
    
        <apex:actionFunction name="SavePage" action="{!save}" />
        <apex:actionFunction name="updatePage" action="{!updatePage}" />
        <!-- RT-473 Strart-->
        <apex:actionFunction name="redirectToCaseTab" action="{!Redirecttocase}">
            <apex:param name="caseId" value="" />
            <!-- assignTo="{!caseId}" -->
        </apex:actionFunction>
        <!-- RT-473 end -->
    
        <apex:pageBlock title="Chat Transcript Detail" mode="maindetail">
            <apex:pageBlockButtons location="top">
                <apex:CommandButton value="Escalate Chat" id="escalateButton" onclick="chatEscalate()" onComplete="return null;">
                <apex:actionSupport event="onComplete" reRender="escalateButton" />
                </apex:CommandButton>
                <apex:commandButton id="fileButton" value="Request File" onclick="testInitFileTransfer()" onComplete="return null;" rendered="{!NOT(OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed'))}" />
                <apex:commandButton action="{!edit}" id="editButton" value="Edit" />
                <apex:commandButton action="{!save}" id="saveButton" value="Save" style="display:none" />
                <apex:commandButton onclick="resetInlineEdit()" id="cancelButton" value="Cancel" style="display:none" />
            </apex:pageBlockButtons>

            <apex:inlineEditSupport showOnEdit="saveButton, cancelButton" hideOnEdit="editButton, escalateButton, fileButton" event="ondblclick" changedStyleClass="myBoldClass" resetFunction="resetInlineEdit" />

            <apex:pageBlockSection showHeader="false" columns="2" collapsible="false">
                <apex:outputField value="{!LiveChatTranscript.Name}" />
                <apex:outputField value="{!LiveChatTranscript.RequestTime}" />
                <apex:outputField value="{!LiveChatTranscript.StartTime}" rendered="{!OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed')}" />
                <apex:outputField value="{!LiveChatTranscript.EndTime}" rendered="{!OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed')}" />
                <apex:outputField value="{!LiveChatTranscript.WaitTime}" rendered="{!OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed')}" />
                <apex:outputField value="{!LiveChatTranscript.ChatDuration}" rendered="{!OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed')}" />
                <apex:outputField value="{!LiveChatTranscript.Status}" />
                <apex:outputField value="{!LiveChatTranscript.LiveChatDeploymentId}" />
                <apex:outputField value="{!LiveChatTranscript.Query_Topic__c}" />
                <apex:outputField value="{!LiveChatTranscript.EndedBy}" rendered="{!OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed')}" />
                <apex:outputField value="{!LiveChatTranscript.OwnerId}" />
                <apex:outputField value="{!LiveChatTranscript.CurrentUserProfile__c}" rendered="null" />
                
            </apex:pageBlockSection>

            <apex:pageBlockSection showHeader="true" title="Provided Details" columns="2" collapsible="false">
                <apex:outputField value="{!LiveChatTranscript.First_Name__c}" />
                <apex:outputField value="{!LiveChatTranscript.Last_Name__c}" />
                <apex:outputField value="{!LiveChatTranscript.Name__c}" />
                <apex:outputField value="{!LiveChatTranscript.Email_Address__c}" />
                <apex:outputField value="{!LiveChatTranscript.Subject__c}" />
            </apex:pageBlockSection>

            <apex:pageBlockSection showHeader="true" title="Transcript" id="transcript" columns="1" collapsible="false" rendered="{!OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed')}">
                <apex:outputField value="{!LiveChatTranscript.Body}" />
            </apex:pageBlockSection>

            <apex:pageBlockSection showHeader="true" title="Related Records" id="associatedRecords" columns="2" collapsible="false">
                <apex:inlineEditSupport showOnEdit="saveButton, cancelButton" hideOnEdit="editButton, escalateButton, fileButton" event="ondblclick" changedStyleClass="myBoldClass" resetFunction="resetInlineEdit" />
                <apex:outputField value="{!LiveChatTranscript.CaseId}" />
                <apex:outputField value="{!LiveChatTranscript.PGi_Client__c}" />                
                <apex:outputField value="{!LiveChatTranscript.Multiple_Client_Records_Found__c}" />
                <apex:outputField value="{!LiveChatTranscript.PGi_Company__c}" />
                <apex:outputField value="{!LiveChatTranscript.Financial_Request__c}" />
                
            </apex:pageBlockSection>
            
            <apex:pageBlockSection showHeader="true" title="Other Related Records" id="associatedRecords2" columns="2" collapsible="false">
                <apex:inlineEditSupport showOnEdit="saveButton, cancelButton" hideOnEdit="editButton, escalateButton, fileButton" event="ondblclick" changedStyleClass="myBoldClass" resetFunction="resetInlineEdit" />
                <apex:outputField value="{!LiveChatTranscript.ContactId}" />
                <apex:outputField value="{!LiveChatTranscript.LeadId}" />
                <apex:outputField value="{!LiveChatTranscript.AccountId}" />
                <apex:outputField value="{!LiveChatTranscript.Multiple_Lead_Records_Found__c}" />                   
            </apex:pageBlockSection>

            <apex:pageBlockSection showHeader="true" title="Visitor Details" columns="1" collapsible="false">
                <apex:outputField value="{!LiveChatTranscript.LiveChatVisitorId}" />
                <apex:outputField value="{!LiveChatTranscript.Company_Name__c}" />
                <apex:outputField value="{!LiveChatTranscript.Location}" />
                <apex:outputField value="{!LiveChatTranscript.Location_Country__c}" />
                <apex:outputField value="{!LiveChatTranscript.Location_Region__c}" />
                <apex:outputField value="{!LiveChatTranscript.Region__c}" />
                <apex:outputField value="{!LiveChatTranscript.Platform}" />
                <apex:outputField value="{!LiveChatTranscript.Browser}" />
                <apex:outputField value="{!LiveChatTranscript.BrowserLanguage}" />
            </apex:pageBlockSection>

            <apex:pageBlockSection showHeader="true" title="GlobalMeet Details" columns="2" collapsible="true" rendered="{!NOT(ISBLANK(LiveChatTranscript.GM_Description__c))}">
                <apex:outputField value="{!LiveChatTranscript.GM_User_Name__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_User_Email__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_PGi_Client__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_PGi_Conference__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_Web_URL__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_User_Type__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_Is_Host__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_Browser__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_Browser_Version__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_User_Operating_System__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_User_OS_Language__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_Meeting_Language__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_Language__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_Product__c}" />
                <apex:outputField value="{!LiveChatTranscript.GM_Product_Version__c}" />
            </apex:pageBlockSection>

            <apex:pageBlockSection showHeader="true" title="GlobalMeet Description" columns="1" collapsible="true" rendered="{!NOT(ISBLANK(LiveChatTranscript.GM_Description__c))}">
                <apex:inlineEditSupport showOnEdit="saveButton, cancelButton" hideOnEdit="editButton, escalateButton, fileButton" event="ondblclick" changedStyleClass="myBoldClass" resetFunction="resetInlineEdit" />
                <apex:outputField value="{!LiveChatTranscript.GM_Description__c}" />
            </apex:pageBlockSection>

            <apex:pageBlockSection showHeader="true" title="Visitor Network Details" id="networkDetails" columns="1" collapsible="false" rendered="{!OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed')}">
                <apex:outputField value="{!LiveChatTranscript.IpAddress}" />
                <apex:outputField value="{!LiveChatTranscript.VisitorNetwork}" />
                <apex:outputField value="{!LiveChatTranscript.UserAgent}" />
                <apex:outputField value="{!LiveChatTranscript.ReferrerUri}" />
                <apex:outputField value="{!LiveChatTranscript.ScreenResolution}" />
            </apex:pageBlockSection>

            <apex:pageBlockSection showHeader="true" title="Metrics" id="metrics" columns="2" collapsible="false" rendered="{!OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed')}">
                <apex:outputField value="{!LiveChatTranscript.VisitorMessageCount}" />
                <apex:outputField value="{!LiveChatTranscript.OperatorMessageCount}" />
                
                <apex:outputField value="{!LiveChatTranscript.AverageResponseTimeVisitor}" />
                <apex:outputField value="{!LiveChatTranscript.AverageResponseTimeOperator}" />
                
                <apex:outputField value="{!LiveChatTranscript.MaxResponseTimeVisitor}" />                               
                <apex:outputField value="{!LiveChatTranscript.MaxResponseTimeOperator}" />
                
            </apex:pageBlockSection>

        </apex:pageBlock>

        
        <script>

            function chatEscalate() {
                       
                var width;
                var height;
                var title = "Escalate Chat";
                var recId = '{!LiveChatTranscript.Id}';
                var Escalated_to_Case = '{!LiveChatTranscript.Escalated__c}';
                var Escalated_to_FinReq = '{!LiveChatTranscript.Escalated_FinReq__c}';
                var Escalated_to_Lead = '{!LiveChatTranscript.Escalated_Lead__c}';
                var userProfile = '{!$Profile.Name}';

                width = 450;
                height = 380;

                var id = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);

                var box = new SimpleDialog("salesforce" + Math.random(), true);
                box.setTitle(title);
                box.displayX = true;
                box.isMovable = false;
                box.createDialog();
                box.setWidth(width);
                
                // set your html content here
                box.setContentInnerHTML(
                    '<iframe src="/apex/EscalateChatCase?Id=' + recId + '" style="border:none;" width="100%" height="' + (height - 10) + 'px" />'           
                );              
                
                //set the height of the modal
                box.dialog.children[1].style.height = height + 'px';
                box.show();

                //if displayX is set to true, then override standard close event by this code
                box.dialog.getElementsByClassName('dialogClose')[0].onclick = function () {
                    box.hide();
                    updatePage();
                    // you can add code to reload the page or redirect to another page
                };
                //optional : add this to close the modal onclick of the overlay background
                box.background.addEventListener('click', function () {
                    box.hide();
                    updatePage();
                });

                // if you want to be able to close the modal from the Visualforce page
                //event.data is passed from EscalateChatCase and is in the format 'close ' + recordId + ' ' + selectedEscalationRecordType
                //res[0] will be 'close', res[1] will be the escalated recordId and res[2] will be the escalated record type (case or finreq)
                window.addEventListener('message', function (event) {
                    var str = event.data;
                    //prevent error if event.data is null/undefined
                    if (str) {
                        var res = str.split(" ");
                    }
                    if (event.data === 'close') {
                        box.hide();
                    }
                    else if (res[0] === 'close') {

                            if (sforce.console.isInConsole()) {
                              
                            
                                //let urlrecord = window.location.origin+'/'+res[1]+'/e?retURL='+res[1];
                                //sforce.console.openPrimaryTab(null, urlrecord ,true);
                                
                                //SavePage();
                                
                                //RT-473: In Console
                                if (res[2] === 'Case'){
                                    if (res[1] != 'none'){
                                        sforce.console.openPrimaryTab(null, window.location.origin + '/apex/CaseTabViewer?isNew=true&id=' + res[1], true);
                                        box.hide();
                                        updatePage();
                                    }
                                }
                                
                                else if (res[2] === 'Lead') {
                                    if (res[1] != 'none') {
                                        if (userProfile.indexOf('Sales') != -1){

                                            let urlrecord = window.location.origin+'/'+res[1]+'/e?retURL='+res[1]+'&isNew=true';
                                            sforce.console.openPrimaryTab(null, urlrecord ,true);
                                            box.hide();
                                            updatePage();
                                        }
                                    }
                                
                                        else {  //navigate to page where Care users can submit Leads         
                                            var baseURL;                             
    
                                            if (window.location.origin.indexOf('cs26') != -1){
                                                baseURL = 'dev-pgi.cs26.force.com';
                                            }
                                            else if (window.location.origin.indexOf('cs19') != -1){
                                                baseURL = 'staging-pgi.cs19.force.com';                                    
                                            }                                           
                                            else {
                                                baseURL = 'pgi.secure.force.com';   
                                            }
                                                                                                                   
                                                box.setContentInnerHTML(
                                                  '<iframe src="https://' + baseURL + '/chatcustompage/Chat_SubmitLead?Id=' + recId + '" style="border:none;" width="100%" height="' + (height - 10) + 'px" />'
                                                );
                                        }
                                 }
                                
                                else if (res[2] === 'Financial_Request__c') {
                                    if (res[1] != 'none'){
                                    updatePage();
                                    box.hide();
                                    //  let urlrecord = window.location.origin+'/'+res[1]+'/e?retURL='+res[1]+'&isNew=true';
                                    //  sforce.console.openPrimaryTab(null, urlrecord ,true);
                                  }
                                }

                            }
                            else {
                                //RT-473
                                //Added to check the assignment Rule in case Tab viewer.(Previously they were directly redirecting to Case Id)
                                if (res[2] === 'Case'){
                                    redirectToCaseTab(res[1]);
                                    //window.open(window.location.href ='/'+res[1]+'/e?retURL='+res[1],"_self");
                                }
                                else {
                                    window.open(window.location.href ='/'+res[1]+'/e?retURL='+res[1]+'&isNew=true',"_self");
                                }
                            }
                            //box.hide(); 
                        }
                });
            }

            function testInitFileTransfer() {
                var mychatKey = '{!LiveChatTranscript.ChatKey}';
                var CaseId = '{!LiveChatTranscript.CaseId}';
                var entityId;
                if (CaseId !== null && CaseId !== "") {
                    entityId = '{!LiveChatTranscript.CaseId}';
                }
                else {
                    alert('Please escalate the chat to a case or fill in a related case number before requesting a file.');
                    return null;
                }
                sforce.console.chat.initFileTransfer(mychatKey, entityId, fileSuccess);
            }

            function fileSuccess(result) {
                //Reports whether initiating the file transfer was successful.
                if (result.success == true) {
                    //alert('Initiating file transfer was successful.');
                } else {
                    //alert('Initiating file transfer was not successful.');
                }
            };


            function setTabTitle() {
                //Set the current tab's title
                sforce.console.setTabTitle('Chat: {!LiveChatTranscript.Name}');
            }
            var pageLoad = window.onload;
            window.onload = function () {
                if (pageLoad) {
                    pageLoad();
                }
                setTabTitle();
            }

        </script>
            
    </apex:form>

    <apex:relatedList list="LiveChatTranscriptEvents" rendered="{!OR(LiveChatTranscript.Status == 'Completed',LiveChatTranscript.Status == 'Dropped',LiveChatTranscript.Status == 'Missed')}"
    />

</apex:page>