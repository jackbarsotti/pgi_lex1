<apex:page applyBodyTag="{!internalUser}" applyHtmlTag="{!internalUser}" showHeader="{!internalUser}" sidebar="false" controller="PGi_ServiceCatalogController"
    extensions="CaseTabViewer" id="page" title="Service Catalog | PGi" standardStylesheets="false" cache="false" expires="94600">
    <link href="https://cdn.rawgit.com/Eonasdan/bootstrap-datetimepicker/e8bddc60e73c1ec2475f827be36e1957af72e2ea/build/css/bootstrap-datetimepicker.css"
        rel="stylesheet"></link>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment-with-locales.js"></script>
    <script src="https://cdn.rawgit.com/Eonasdan/bootstrap-datetimepicker/e8bddc60e73c1ec2475f827be36e1957af72e2ea/src/js/bootstrap-datetimepicker.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <style>
        /* longtext/richtext inputs */

        textarea {
            width: 100% !important;
        }

        /* multiselect inputs */

        select[multiple] {
            width: 100% !important;
        }

        .multiSelectPicklistTable {
            width: 100% !important;
        }

        .multiSelectPicklistRow {
            width: 100% !important;
        }

        /* datepicker inputs */

        .dateInput input[type=text],
        textarea {
            width: 100% !important;
        }

        .dateInput {
            width: 60% !important;
        }

        /* lookup */

        .lookupInput input[type=text] {
            width: 90% !important;
        }

        /* email, */

        input[type=text] {
            width: 100% !important;
        }

        .custPopup {
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 50%;
            padding: 10px;
            position: fixed;
            /* These are the 3 css properties you will need to change so the popup 
            displays in the center of the screen. First set the width. Then set 
            margin-left to negative half of what the width is. You can add 
            the height property for a fixed size pop up if you want.*/
            width: 500px;
            margin-left: -250px;
            top: 100px;
        }

        .popupBackground {
            background-color: black;
            opacity: 0.20;
            filter: alpha(opacity=20);
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 9998;
        }

        .border {
            border-style: hidden;
        }
    </style>

    <div class="service-catalog">
        <apex:composition template="PGI_ServiceCatalog_SiteTemplate">
            <apex:define name="body">
                <apex:form id="form" styleClass="container-fluid" enctype="multipart/form-data">
                    <div id="modalPopup" style=" display: none;">
                        <apex:outputPanel styleClass="popupBackground" layout="block" />
                        <apex:outputPanel styleClass="custPopup" layout="block" id="custPopup" rendered="{!sobjectType == 'Financial_Request__c' || sObjectType == 'Case'}">
                            <table border="0">
                                <tr>
                                    <td Class="border">
                                        <apex:outputlabel value="Please confirm the client and company" />
                                    </td>
                                    <td Class="border">
                                    </td>
                                </tr>
                                <tr>
                                    <td Class="border">
                                        Company:
                                        <apex:outputLabel id="company" value="{!theRecord['PGi_Company__c']}" />

                                    </td>
                                    <td Class="border">
                                        Company Id:
                                        <apex:outputLabel id="companyId" value="{!theRecord['PGi_Company__c']}" />

                                    </td>
                                    <td Class="border">
                                        Client:
                                        <apex:outputLabel id="client" value="{!theRecord['PGi_Company__c']}" />

                                    </td>
                                </tr>
                            </table>
                            <br/>
                            <apex:commandButton id="confirm" value="Confirm" action="{!saveServiceCatalog}" />

                            <apex:commandButton value="Cancel" onclick="closePopup();return false;" />

                        </apex:outputPanel>
                    </div>
                    <apex:actionFunction action="{!saveServiceCatalog}" name="save" />
                    <apex:outputPanel layout="block" styleClass="row">
                        <!-- service catalog home -->
                        <apex:outputPanel layout="block" styleClass="col-xs-12 col-md-10 col-md-offset-1" rendered="{!selectedCategoryId == null}">
                            <h1 class="text-center">Welcome to the PGi Service Catalog.</h1>
                            <apex:pageMessages />

                            <apex:outputPanel layout="block" styleClass="row row-panels" rendered="{!selectedCategoryId == null}">
                                <apex:repeat value="{!categoryList}" var="cell" rendered="{!categoryList != null && internalUser}">
                                    <apex:outputPanel layout="block" styleClass="col-sm-3 col-xs-12">
                                        <!--  col-sm-3 -->

                                        <!-- navigation fix for  service console -->
                                        <apex:outputPanel layout="block" rendered="{!cell.Navigate_to__c != ''}" styleClass="panel panel-category">
                                            <apex:variable var="imageVar" value="{!cell.Static_Resource_Image__c}" />
                                            <apex:commandLink onclick="window.open('{!cell.Navigate_to__c}')" value="{!cell.Title__c}">
                                                <apex:image url="{!URLFOR($Resource.PGi_ServiceCatalogCategoryImages) + '/'+ imageVar}" styleClass="panel-icon" alt="{!cell.Title__c}"
                                                />
                                            </apex:commandLink>
                                            <apex:commandLink onclick="window.open('{!cell.Navigate_to__c}')" styleClass="btn btn-primary" value="{!cell.Title__c}">
                                            </apex:commandLink>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="block" rendered="{!cell.Navigate_to__c == ''}" styleClass="panel panel-category">>
                                            <apex:variable var="imageVar" value="{!cell.Static_Resource_Image__c}" />
                                            <apex:commandLink action="{!rerender}" value="{!cell.Title__c}">
                                                <apex:param name="categoryOptionId" value="{!cell.Id}" assignTo="{!selectedCategoryId}" />
                                                <apex:image url="{!URLFOR($Resource.PGi_ServiceCatalogCategoryImages) + '/'+ imageVar}" styleClass="panel-icon" alt="{!cell.Title__c}"
                                                />
                                            </apex:commandLink>
                                            <apex:commandLink action="{!rerender}" styleClass="btn btn-primary" value="{!cell.Title__c}">
                                                <apex:param name="categoryId" value="{!cell.Id}" assignTo="{!selectedCategoryId}" />
                                            </apex:commandLink>
                                        </apex:outputPanel>
                                        <!-- end fix -->
                                    </apex:outputPanel>
                                </apex:repeat>
                            </apex:outputPanel>
                            <p class="text-center">Thank you for using the PGi Service Catalog!</p>
                        </apex:outputPanel>
                        <!-- end service catalog -->

                        <!-- selected category -->
                        <apex:outputPanel layout="block" rendered="{!selectedCategoryId != null}" styleClass="col-xs-12">
                            <apex:outputPanel rendered="{!selectedCategoryOptionId != null}">
                                <ol class="breadcrumb">
                                    <!-- bread crumbs -->
                                    <li>
                                        <apex:commandLink action="{!home}" value="Home" immediate="true" />
                                    </li>
                                    <li>
                                        <apex:commandLink action="{!cancel}" immediate="true">{!selectedCategory.Title__c}</apex:commandLink>
                                    </li>
                                    <li class="active">{!selectedCategoryOption.Title__c}</li>
                                </ol>
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!selectedCategoryOptionId == null}">
                                <ol class="breadcrumb">
                                    <li>
                                        <apex:commandLink action="{!home}" value="Home" immediate="true" />
                                    </li>
                                    <li class="active">{!selectedCategory.Title__c}</li>
                                </ol>
                            </apex:outputPanel>
                            <apex:outputPanel id="row">
                                <div class="row">

                                    <!-- side category nav -->
                                    <div class="col-md-3 col-sm-4">
                                        <ul class="list-group side-menu">
                                            <apex:repeat value="{!categoryList}" var="cat">
                                                <li class="list-group-item">
                                                    <apex:commandLink action="{!rerender}" value="{!cat.Title__c}" immediate="true">
                                                        <apex:param name="categoryOptionId" value="{!nullValue}" assignTo="{!selectedCategoryOptionId}" />
                                                        <apex:param name="categoryId" value="{!cat.Id}" assignTo="{!selectedCategoryId}" />
                                                    </apex:commandLink>
                                                </li>
                                            </apex:repeat>
                                        </ul>
                                        <p class="note"></p>
                                    </div>
                                    <!-- end side nav -->

                                    <!-- no category option yet -->
                                    <apex:outputPanel rendered="{!selectedCategoryId != null && selectedCategoryOptionId == null}">
                                        <div class="col-md-9 col-sm-8">
                                            <h2>{!selectedCategory.Title__c}</h2>
                                            <apex:pageMessages />
                                            <apex:repeat value="{!displayCategoryOptionList}" var="catOption">
                                                <div class="request-item row">
                                                    <apex:outputPanel layout="block" styleClass="col-sm-9">
                                                        <h4>{!catOption.Title__c}</h4>
                                                        <p>{!catOption.Description__c}</p>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel styleClass="col-sm-3 text-right" layout="block" rendered="{!catOption.Navigate_to__c != ''}">
                                                        <apex:commandLink onclick="window.open('{!catOption.Navigate_to__c}')" value="Request" styleClass="btn btn-primary btn-sm">
                                                        </apex:commandLink>
                                                    </apex:outputPanel>
                                                    <apex:outputPanel styleClass="col-sm-3 text-right" layout="block" rendered="{!catOption.Navigate_to__c == ''}">
                                                        <apex:commandLink action="{!rerender}" value="Request" styleClass="btn btn-primary btn-sm">
                                                            <apex:param name="categoryOptionId" value="{!catOption.Id}" assignTo="{!selectedCategoryOptionId}" />
                                                        </apex:commandLink>
                                                    </apex:outputPanel>

                                                </div>
                                            </apex:repeat>
                                        </div>
                                    </apex:outputPanel>
                                    <!-- end no category option - begin category option selected -->
                                    <apex:outputPanel layout="block" rendered="{!selectedCategoryOptionId != null && theRecord.Id == null}">

                                        <div class="col-md-9 col-sm-8 col-xs-12">
                                            <apex:pageBlock title="{!selectedCategoryOption.Title__c}" id="fieldBlock">

                                                <apex:pageMessages />
                                                <apex:outputPanel rendered="{!internalUser}">
                                                    <p>
                                                        <apex:outputText value="{!selectedCategoryOption.Internal_User_Instructions__c}" escape="false" />
                                                    </p>
                                                </apex:outputPanel>
                                                <apex:outputPanel rendered="{!!internalUser}">
                                                    <p>
                                                        <apex:outputText value="{!selectedCategoryOption.External_User_Instructions__c}" escape="false" />
                                                    </p>
                                                </apex:outputPanel>
                                                <apex:actionRegion >
                                                    <apex:repeat value="{!displaySectionList}" var="section" id="fields">
                                                        <apex:repeat value="{!sectionIdToFields[section.Id]}" var="field">
                                                            <apex:outputPanel rendered="{!$ObjectType[sObjectType].fields[field].inlineHelpText != ''}" styleClass="helpOrb tooltip">
                                                                <apex:outputText value="{!$ObjectType[sObjectType].fields[field].inlineHelpText}" />
                                                            </apex:outputPanel>

                                                            <apex:outputLabel value="{!field.label}" />

                                                            <!-- conditional rendering of input fields so that we do not render parent or related fields - only 1 sObject type is supported at this time -->
                                                            <div style="position:relative;">
                                                                <apex:inputField value="{!theRecord[field.fieldPath]}" required="{!OR(field.required, field.dbrequired)}" rendered="{!NOT(CONTAINS(field.fieldPath, '.')) && NOT(CONTAINS(field.fieldPath, '__r'))}"
                                                                    html-inputName="{!field.fieldPath}__input">
                                                                    <apex:actionSupport event="onchange" rerender="fields" immediate="true" />
                                                                    <apex:actionSupport event="onchange" onsubmit="setClientInfo();return false;" rendered="{!field.fieldPath == 'Bill_To_Client__c'}"
                                                                    />
                                                                </apex:inputField>

                                                            </div>
                                                        </apex:repeat>
                                                    </apex:repeat>
                                                </apex:actionRegion>
                                                <apex:outputPanel rendered="{!selectedCategoryOption.Allow_Attachments__c}">
                                                    <apex:outputLabel value="Attach File (under 25MB)" for="file" />
                                                    <apex:inputFile value="{!attach.body}" filename="{!attach.name}" id="file" styleClass="btn btn-primary btn-md form-button"
                                                    />
                                                </apex:outputPanel>

                                                <apex:commandButton onclick="confirm();return false;" value="Submit" styleClass="btn btn-primary btn-md form-button" rendered="{!displaySectionList.size > 0}"
                                                    reRender="modalPopup" />

                                            </apex:pageBlock>
                                        </div>
                                    </apex:outputPanel>
                                    <!-- successful submit -->
                                    <apex:outputPanel layout="block" rendered="{!theRecord.Id != null}" styleClass="col-md-9 col-sm-8">
                                        <h2>Thank You</h2>
                                        <p>We have received your request. We will be in touch as soon as possible.</p>
                                        <apex:outputPanel rendered="{!internalUser && theRecord.Id != null}">
                                            <apex:commandLink value="Please click here to view your case" action="{!navigateToRecord}" />
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                </div>
                            </apex:outputPanel>
                        </apex:outputPanel>

                        <!-- end selected category -->


                    </apex:outputPanel>
                </apex:form>
            </apex:define>
        </apex:composition>
        <apex:outputPanel id="scriptpanel">
            <script type="text/javascript">
                $j(".helpOrb").hover(
                    function () {
                        var tooltipContent = $j(this).text();
                        var constructTooltip = "<div class='tooltip'>" + tooltipContent + "</div>";
                        var tooltip = $j(constructTooltip).insertAfter(this);
                        $j(tooltip).show();
                    },
                    function () {
                        $j("div.tooltip").remove();
                    }
                );

            </script>
            <script type="text/javascript">


                //Initialize jQuery 
                $j = jQuery.noConflict();
                // Initialize jQuery UI datepicker
                $j(function () {
                    try {
                        //$j('.multiSelectPicklistTable').each(function(i) { i.style.width = "2000px !important"; });
                        if ($j(".multiSelectPicklistTable").style) {
                            $j(".multiSelectPicklistTable").style.width = "2000px";
                        }
                    } catch (exception) {
                        console.log(exception);
                    }

                    $j(".dateInput input").each(function () {
                        var dateTimeString = $j(this).next().first().text();
                        dateTimeString = dateTimeString.replace('[ ', '');
                        dateTimeString = dateTimeString.replace(' ]', '');
                        if (dateTimeString.includes(':')) {
                            if (dateTimeString.includes('AM') || dateTimeString.includes('PM')) {
                                // use default 12 hour format
                                $j(this).datetimepicker({
                                    defaultDate: dateTimeString
                                });
                            }
                            else {
                                var from = dateTimeString.split("/");
                                var fromTime = from[2].substring(5);
                                var user24HrDateTimeStr = from[1] + "/" + from[0] + "/" + from[2];
                                // use 24 hour format
                                $j(this).datetimepicker({
                                    format: 'DD/MM/YYYY HH:mm',
                                    defaultDate: user24HrDateTimeStr
                                });
                            }
                        }
                        else {
                            $j(this).datepicker();
                        }
                    })
                    // clear out plugin autofill date *plugin issue when setting defaultdate populated on initialization*
                    $j(".dateInput input").each(function () {
                        $j(this).val('');
                        $j(this).attr('autocomplete', 'off');
                    })
                });

                // Replace Salesforce Datepicker
                var DatePicker = {
                    // cancel Salesforce pickDate
                    pickDate: function () { },
                    // recreate Salesforce insertDate
                    insertDate: function (todaysDate, inputId) {
                        $j(document.getElementById(inputId)).val(todaysDate);
                    }
                };


                /* SCRIPT TO ADD CONFERENCE INFO */
                var productField, aofField, symptomField, subSymptomField, initialized, companyNameString;
                var productFieldId, aofFieldId, symptomFieldId, subSymptomFieldId, conferenceFieldId, bridgeNameFieldId, moderatorPasscodeFieldId, listenOnlyFieldId, participantFieldId, clientFieldId, companyFieldId;
                var getFieldIds = function () {
                    try {
                        if ($j('[inputname="PGi_Conference__c__input"]')[0]) {
                            conferenceFieldId = $j('[inputname="PGi_Conference__c__input"]')[0].id;
                        }
                        if ($j('[inputname="Bridge_Name__c__input"]')[0]) {
                            bridgeNameFieldId = $j('[inputname="Bridge_Name__c__input"]')[0].id;
                        }
                        if ($j('[inputname="Moderator_Passcode__c__input"]')[0]) {
                            moderatorPasscodeFieldId = $j('[inputname="Moderator_Passcode__c__input"]')[0].id;
                        }
                        if ($j('[inputname="Listen_Only_Passcode__c__input"]')[0]) {
                            listenOnlyFieldId = $j('[inputname="Listen_Only_Passcode__c__input"]')[0].id;
                        }
                        if ($j('[inputname="Participant_Passcode__c__input"]')[0]) {
                            participantFieldId = $j('[inputname="Participant_Passcode__c__input"]')[0].id;
                        }
                        if ($j('[inputname="Bill_To_Client__c__input"]')[0]) {
                            clientFieldId = $j('[inputname="Bill_To_Client__c__input"]')[0].id;
                        }
                        if ($j('[inputname="PGi_Company__c__input"]')[0]) {
                            companyFieldId = $j('[inputname="PGi_Company__c__input"]')[0].id;
                        }
                    } catch (exception) {
                        console.log('exception', exception);
                    }
                }
                var setClientInfo = function () {
                    console.log('setClientInfo');
                    var conferenceValue = $j('[id="' + conferenceFieldId + '"]').val();
                    if (conferenceValue != undefined && conferenceValue != '') {
                        setConferenceInfo();
                    }
                    var clientId = $j('[id="' + clientFieldId + '_lkid"]').val();
                    if (clientId == undefined) {
                        clientId = '';
                    }
                    var clientValue = $j('[id="' + clientFieldId + '"]').val();
                    if (clientValue == undefined) {
                        clientValue = '';
                    }
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.CaseTabViewer.getClientInfo}', clientValue, clientId,
                        function (result, event) {
                            if (event.status) {
                                console.log(result);
                                if (result != null) {
                                    result.PGi_Company__c = result.PGi_Company__c || '';
                                    if (result.PGi_Company__c != '') {
                                        companyNameString = result.PGi_Company__r.Company_Name__c;
                                        $j('[id="' + companyFieldId + '"]').val(result.PGi_Company__r.Name);
                                        $j('[id="' + companyFieldId + '_lkid"]').val(result.PGi_Company__c);
                                    }
                                }
                            }
                        }, { escape: true }
                    );
                }

                var pageLoad = window.onload;
                try {
                    window.onload = function () {
                        if (pageLoad && typeof pageLoad == 'function') {
                            getFieldIds(); //store IDs
                            pageLoad(); //standard page load
                            // onPageLoad(); //perform custom page load
                            setClientInfo();

                        } else {
                            getFieldIds();
                            // onPageLoad();
                            setClientInfo();

                        }

                    }
                } catch (e) {

                }
                function closePopup() {
                    document.getElementById('modalPopup').style.display = 'none';
                }
                function showPopup() {
                    document.getElementById('modalPopup').style.display = '';
                    document.getElementById('{!$Component.page.j_id1.form.companyId}').innerText = $j('[id="' + companyFieldId + '"]').val();
                    document.getElementById('{!$Component.page.j_id1.form.company}').innerText = companyNameString;
                    document.getElementById('{!$Component.page.j_id1.form.client}').innerText = $j('[id="' + clientFieldId + '"]').val();
                }
                function confirm() {
                    if (clientFieldId) {
                        showPopup();

                    } else {
                        save();
                    }
                }
            </script>


        </apex:outputPanel>
    </div>
</apex:page>