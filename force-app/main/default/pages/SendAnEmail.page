<apex:page sidebar="{!IF(passedInFrom != null, false , true)}" showHeader="{!IF(passedInFrom != null, false , true)}" controller="EmailComposer"
    id="page" action="{!init}" extensions="CustomEmailTemplateLookupController" docType="html-5.0" lightningStylesheets="true">
    <apex:includeLightning />
    <script type="text/javascript">
        sforce.connection.sessionId = '{!GETSESSIONID()}';

    </script>
    <!-- <apex:slds /> -->
    <apex:includeScript value="/support/console/47.0/integration.js" />
    <apex:includeScript value="/soap/ajax/47.0/connection.js" />
    <!-- inspired from https://jsfiddle.net/marvin_pribble/LL6d15we/ -->
    <!-- <apex:stylesheet value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" />
        <apex:stylesheet value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" />
        <apex:stylesheet value="https://cdnjs.cloudflare.com/ajax/libs/fuelux/3.11.0/css/fuelux.css" />
        <apex:stylesheet value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" />
        <apex:stylesheet value="https://www.fuelcdn.com/fuelux-mctheme/1.7.0/css/fuelux-mctheme.css" />
        <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" />
        <apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.js" />
        <apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore.js" />
        <apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.2.3/backbone.js" />
        <apex:includeScript value="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" />
        <apex:includeScript value="https://cdnjs.cloudflare.com/ajax/libs/fuelux/3.11.0/js/fuelux.js" /> -->
    <!-- <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js" />
        <script src="https://cdn.ckeditor.com/4.6.2/standard/ckeditor.js"></script>
        <script type="text/javascript">
            $j = jQuery.noConflict();
        function reloadCKEditor() {
            //ckeditor library does the trick by calling this method. 
            //It takes as parameter a string representing the style class to reach for, in order to enable our text area to be really #rich!                                                 
            CKEDITOR.replaceAll('ckeditor');
        }
        function setCKEditorValues() {
            //here we assign to our hidden textarea the value of the visible one  
            $j("[id$='hidden_text_area_field']").val(CKEDITOR.instances[$j("[id$='text_area_field']").attr('id')].getData());
        }       
    </script> -->
    <style>
        .overlay {
            position: fixed;
            /* Sit on top of the page content */
            display: block;
            /* Hidden by default */
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 9999;
            /* Specify a stack order in case you're using a different order for other elements */
            cursor: pointer;
            /* Add a pointer on hover */
        }

        /* .fill-available {
   height : 100%;
   height: -webkit-fill-available;
}
.overlay-translucent {
   background-color: rgba(0,0,0,0.5);    
} */

        .overlay-white {
            background-color: rgba(255, 255, 255, 0.7);
        }
    </style>

    <apex:form id="form">

        <div class="overlay overlay-white" id="spinner" style="display: none;">
            <div style="position: fixed; top: 0; left: 0; right: 0; bottom: 0; opacity: 0.25; z-index: 1000; background-color: black;">
                &nbsp;
            </div>
            <div style="position: fixed; left: 0; top: 0; bottom: 0; right: 0; z-index: 1001; margin: 15% 50%">
                <div style="display: inline-block; padding: 2px; background-color: #fff; width: 125px;">
                    <img src="/img/loading.gif" style="float: left; margin: 8px;" />
                    <span style="display: inline-block; padding: 10px 0px;">Please Wait...</span>
                </div>
            </div>
        </div>
        <apex:pageBlock id="pb">

            <apex:pageMessages id="pm" />
            <apex:pageBlockButtons location="top">

            </apex:pageBlockButtons>
            <apex:pageBlockButtons location="both">
                <apex:commandButton value="Use Correct Case" onclick="correctCaseUsageJs();return false;" rendered="{!correctCase != null}"
                    reRender="form" />
                <!-- <apex:commandButton value="Send Email" action="{!composeEmail}" rendered="{!!showForm && initialized}" /> -->

                <!-- <apex:commandButton value="Select Template" onclick="loadFolder();showPopup();" reRender="none" rendered="{!showForm}" disabled="{!fromAddress == ''}"
                /> -->
                <apex:commandButton value="Select Template" onclick="check();" reRender="none" rendered="{!showForm}" disabled="{!fromAddress == ''}"
                />


                <label for="uploadInput" class="btn" style="padding:.4%;">Attach File</label>
                <input id="uploadInput" style="visibility:hidden;display:none;" type="file" onchange="getFiles(this.value);return false;"
                />

                <apex:commandButton id="send" value="Send" action="{!send}" onclick="disableOnSubmit(this);" rendered="{!showForm}" />
                <apex:commandButton value="Cancel" action="{!cancel}" rendered="{!showForm}" />
            </apex:pageBlockButtons>
            <apex:actionFunction name="CallApexMethod" action="{!CreateAttachment}" rerender="AttachmentList">
            </apex:actionFunction>
            <script>
                //added to show the popup when we click the Select Template button.
                function check() {
                    if (confirm("Previous content will be lost. Press OK to continue")) {
                        loadFolder();
                        showPopup();
                    }
                }

                function getFiles(a) {
                    var x = document.getElementById('spinner');
                    x.style.display = 'block';
                    oFiles = document.getElementById("uploadInput").files[0];
                    fileName = oFiles;
                    var nameOfFile = fileName.name;
                    var reader = new FileReader();
                    /*reader.onload = function () {
                        var data = btoa(reader.result);
                        console.log('data',data);
                        CallApexMethod(nameOfFile,data);
                    }*/
                    reader.onload = function (e) {
                        var att = new sforce.SObject("Attachment");
                        att.Name = nameOfFile;
                        att.Description = 'Email-Temp-Attachment';
                        att.ParentId = '{!currentCase.Id}';
                        // console.log('The NAme', att.ParentId);
                        att.Body = (new sforce.Base64Binary(e.target.result)).toString();

                        sforce.connection.create([att],
                            {
                                onSuccess: function (result, source) {
                                    x.style.display = 'none';
                                    if (result[0].getBoolean("success")) {

                                        CallApexMethod();
                                        // console.log("new attachment created with id " + result[0].id);

                                    }
                                    else {

                                        // console.log("failed to create attachment " + result[0]);
                                    }
                                },
                                onFailure: function (error, source) {
                                    x.style.display = 'none';
                                    // console.log("An error has occurred " + error);
                                }
                            });
                    };
                    reader.readAsBinaryString(oFiles);
                }
                function disableOnSubmit(input) {
                    // console.log
                    setTimeout('disableAfterTimeout(\'' + input.id + '\');', 25);
                }
                function disableAfterTimeout(id) {
                    var toDisable = document.getElementById(id);
                    toDisable.disabled = 'disabled';
                    // Use the Salesforce CSS style to make the button appear disabled
                    toDisable.className = 'btnDisabled';
                    toDisable.value = "Sending..."
                }
            </script>
            <apex:actionFunction name="setInConsole" action="{!setInConsole}" />
            <apex:actionFunction name="rerender" reRender="pb" action="{!rerenderTemplate}" />

            <apex:actionFunction name="correctCaseUsageJs" action="{!changeCase}" />
            <apex:actionFunction name="composeEmail" reRender="pb" action="{!composeEmail}" />
            <apex:actionFunction name="changeFrom" reRender="pb" oncomplete="rerenderRich();" />
            <apex:actionFunction name="setFolderId" reRender="tabbedPanel" action="{!setFolderId}">
                <apex:param name="folder" assignTo="{!folder}" value="{!folderId}" />
            </apex:actionFunction>
            <apex:outputPanel rendered="{!showForm}" id="op">
                <table width="100%" id="tbl">
                    <td width="35%" style="vertical-align: top;">
                        <apex:pageBlockSection columns="1">
                            <!-- {!fromAddress} -->
                            <!--RT- 475 warning about loosing my email text if I go to change the FROM. -->
                            <apex:selectList style="width: 100%;" value="{!fromAddress}" label="From" size="1" multiselect="false" onfocus="this.setAttribute('PrvSelectedValue',this.value);"
                                onchange="if(this.getAttribute('PrvSelectedValue')=='')
                                                            {
                                                                rerender();
                                                            }
                                                            else{
                                                                if(confirm('Warning! Previous content will be lost.Press OK to change')==false){
                                                                     this.value=this.getAttribute('PrvSelectedValue');
                                                                     return false; 
                                                                    } 
                                                                    else{
                                                                        rerender();
                                                                    }
                                                                }">

                                <!-- <apex:actionSupport event="onchange" onsubmit="verify();return false;" reRender="pb" >
                                    </apex:actionSupport>       -->
                                <apex:selectOptions value="{!fromAddressOptions}" />
                            </apex:selectList>

                            <apex:outputText style="width: 100%;" value="{!origin}" label="Origin" />
                            <apex:selectList style="width: 100%;" value="{!currentCase.Status}" label="Status" size="1" multiselect="false">
                                <apex:selectOptions value="{!statusPicklist}" />
                            </apex:selectList>
                            <apex:inputText style="width: 100%;" value="{!toAddress}" label="To" />
                            <!-- <div class='fuelux'>
<div id='toEmailsPillbox' data-initialize='pillbox' class='pillbox'>
<ul class='clearfix pill-group'>
<li class="pillbox-input-wrap btn-group">
<input type="text" class="form-control dropdown-toggle pillbox-add-item" placeholder="add email" />
<button type="button" class="dropdown-toggle sr-only">
<span class="caret"></span>
</button>
</li>
</ul>
</div>
</div>
<script>
console.log($('#toEmailsPillbox'));
$('#toEmailsPillbox').pillbox({ 'readonly': false, 'edit': true });
$('#toEmailsPillbox')
.pillbox(
    'addItems',
    {!recipients.toListObj}
    
);
$('#toEmailsPillbox').on('added.fu.pillbox', function (event, item) {
    console.log('added another', 'event:', event, 'item:', item);
    $('#toEmailsPillbox').pillbox({ 'readonly': true });
    
})
</script> -->
                            <apex:inputText style="width: 100%;" value="{!ccAddress}" label="CC" />
                            <apex:inputText style="width: 100%;" value="{!bccAddress}" label="BCC" />
                            <apex:outputText style="width: 100%;" value="{!selectedTemplate}" label="Template" />
                            <apex:inputField style="width: 95%;" value="{!currentCase.ParentId}" label="Parent Case">
                                <apex:actionsupport event="onchange" action="{!validateParentCase}" reRender="pm, pb" />
                            </apex:inputField>
                            <apex:inputField style="width: 95%;" value="{!em.ParentId}" label="Case">
                                <apex:actionsupport event="onchange" action="{!validateParentCase}" reRender="pm" />
                            </apex:inputField>

                            <!-- <apex:outputField value="{!currentCase.ParentId}" /> -->
                        </apex:pageBlockSection>
                    </td>
                    <td width="65%" id="td">


                        <apex:pageBlockSection columns="1" id="rich">
                            <apex:inputText style="width: 100%;" value="{!subject}" label="Subject" />
                            <c:customrtf targetclass="emailbody" toolbar="Email" />
                            <apex:inputTextarea styleClass="emailbody" richText="false" value="{!emailBody}" HTML-spellcheck="true" />

                            <!-- <apex:inputTextarea styleClass="emailbody" richText="false" id="rta"  />

                            <script src="/ckeditor/ckeditor-3.6.2/ckeditor.js?t=3.6.2.3" type="text/javascript"/>
                            <script>CKEDITOR.timestamp = '3.6.2.1';
                            var prototocolAndHost = window.location.protocol + '//' + window.location.host;
                              console.log('prototocolAndHost>>',prototocolAndHost);
                            var editor = CKEDITOR.replace('{!$Component.form.pb.op.tbl.td.rich.rta}', {baseHref : prototocolAndHost + '/ckeditor/ckeditor-3.6.2/', customConfig : '/ckeditor/ckeditor-3.6.2/ckeditor.config.js', height : '425', bodyId : 'articleEdit:createDocumentForm:sectionRepeat:0:fieldRepeat:0:fieldName:textAreaDelegate_00NG0000009Thtt_rta_body', toolbar : 'Full', sharedSpaces : { top : 'cke_topSpace', bottom : ' cke_bottomSpace' }, filebrowserImageUploadUrl : '/_ui/common/request/servlet/RtaImageUploadServlet', contentsCss : ['/sCSS/27.0/sprites/1362621144000/Theme3/default/gc/ArticleHtmlDetailElem.css'], disableNativeSpellChecker : false,language : 'en-us',sfdcLabels : { CkeMediaEmbed : { title : 'Embed Multimedia Content', description : 'Use &lt;iframe&gt; code from DailyMotion, Vimeo, and Youtube.', subtitle : 'Paste &amp;lt;iframe&amp;gt; code here:', exampleTitle : 'Example:', example : '\n            \n                &lt;iframe width=\&quot;560\&quot; height=\&quot;315\&quot; src=\&quot;https://www.youtube.com/embed/KcOm0TNvKBA\&quot; frameborder=\&quot;0\&quot; allowfullscreen&gt;&lt;/iframe&gt;\n            \n        ', iframeMissing : 'Invalid &lt;iframe&gt; element. Please use valid code from the approved sites.'}, sfdcSwitchToText : { sfdcSwitchToTextAlt : 'Use plain text'}, CkeImageDialog : { uploadTab : 'Upload Image', infoTab_url : 'URL', error : 'Error:', uploadTab_desc_info : 'Enter a description of the image for visually impaired users', uploadTab_desc : 'Description', infoTab_url_info : 'Example: http://www.mysite.com/myimage.jpg', btn_insert : 'Insert', missingUrlError : 'You must enter a URL', uploadTab_file : 'Select Image', infoTab_desc : 'Description', btn_upadte : 'Update', wrongFileTypeError : 'You can insert only .gif .jpeg and .png files.', infoTab : 'Web Address', title : 'Insert Image', infoTab_desc_info : 'Enter a description of the image for visually impaired users', uploadTab_file_info : 'Maximum size 1 MB. Only png, gif or jpeg'}, CkeImagePaste : { CkeImagePasteWarning : 'Pasting an image is not working properly with Firefox, please use [Copy Image location] instead.'}}});
                            </script> -->

                        </apex:pageBlockSection>

                    </td>
                </table>
            </apex:outputPanel>
            <apex:outputPanel rendered="{!composeOnLoad && !showForm}">
                <apex:actionFunction name="composeEmail" action="{!composeEmail}" />
                <script>
                            var pageLoad = window.onload;
                      console.log('pageLoad>>',pageLoad);
                    window.onload = function () {
                        if (pageLoad && typeof pageLoad == 'function') {
                            pageLoad(); //standard page load
                            composeEmail();
                        } else {
                            composeEmail();
                        }
                    }
                </script>

            </apex:outputPanel>
            <apex:outputPanel rendered="{!!inConsole}">

                <script type="text/javascript">
                    // console.log('loading?');
                    if (sforce && sforce.console && sforce.console.isInConsole()) {
                        // console.log('setting in console');
                        setInConsole();
                    }

                </script>
            </apex:outputPanel>
        </apex:pageBlock>
        <div id="modalPopup" style="display: none;">
            <apex:actionFunction name="folderChange" onbeforedomupdate="cacheFolder();" action="{!doNothing}" reRender="tabbedPanel"
            />

            <apex:outputPanel styleClass="popupBackground" layout="block" />
            <apex:outputPanel styleClass="custPopup" layout="block">
                <apex:selectList id="folder" value="{!folderId}" multiselect="false" size="1" label="Email Folder" onchange="folderChange();">
                    <apex:selectOptions value="{!folderList}" />
                </apex:selectList>
                <apex:commandButton value="Cancel" onclick="hidePopup()" />
                <apex:tabPanel switchType="client" selectedTab="name1" id="tabbedPanel" style="overflow: scroll; width:
                                                                                               400px; height: 200px;">
                    <apex:tab label="Email Template's" name="tab1" id="tabOne">
                        <apex:actionRegion >
                            <apex:outputPanel id="pnlSearchResults" style="margin:10px;" layout="block">
                                <apex:pageBlock id="searchResults">
                                    <apex:pageBlockTable value="{!results}" var="a" id="tblResults" styleClass="pageBlockTable">
                                        <apex:column >
                                            <apex:facet name="header">
                                                <apex:outputPanel >Name</apex:outputPanel>
                                            </apex:facet>
                                            <apex:outputLink value="#" onclick="closeModal('{!a.Id}');" rendered="{!NOT(ISNULL(a.Id))}">{!a.Name}</apex:outputLink>
                                        </apex:column>
                                    </apex:pageBlockTable>
                                </apex:pageBlock>
                            </apex:outputPanel>
                        </apex:actionRegion>
                    </apex:tab>
                </apex:tabPanel>
                <apex:actionFunction name="closeModal" action="{!selectTemplate}" oncomplete="hidePopup();" reRender="pb">
                    <apex:param name="selectedTemplate" value="{!selectedTemplate}" />
                </apex:actionFunction>
                <apex:commandButton value="Cancel" onclick="hidePopup()" />
            </apex:outputPanel>
        </div>
        <!-- Attachments Related List -->
        <apex:pageblock id="AttachmentList" title="Attachments">

            <apex:pageBlockTable value="{!attachments}" var="attach" rendered="{!NOT(ISNULL(attachments))}">

                <apex:column HeaderValue="Action" width="40">

                    <apex:commandLink value="Del" onclick="return confirm('Are you sure?')" style="color:#015ba7;" action="{!deleteAttachment}">
                        <apex:param value="{!attach.id}" name="attachmentId" />

                    </apex:commandLink>

                </apex:column>

                <apex:column headerValue="File">
                    <apex:outputText value="{!attach.Name}" />
                </apex:column>

                <apex:column value="{!attach.BodyLength}" />

            </apex:pageBlockTable>

            <apex:outputLabel value="No records to display" rendered="{!(ISNULL(attachments))}" styleClass="noRowsHeader"></apex:outputLabel>

        </apex:pageblock>
        <!-- End of Attachment RelatedList -->

    </apex:form>

    <!-- <apex:includeLightning />
<apex:includeScript value="/support/console/41.0/integration.js" />
<div id="Lightning"></div>
<script>

$Lightning.use("c:DockedEmailComposerApp", function () {
    
    $Lightning.createComponent("c:DockedEmailComposer", {
        caseObj: '{!objCase} ',
        reply: '{!reply} ',
        toAll: '{!toAll} ',
        isFromCaseRecord: '{!isFromCaseRecord} ',
        // fromEmail:'{!fromEmail} ',
        // emailTo: '{!toEmailAddress} ',
        // emailCc: '{!ccEmailAddress} ',
        // emailBcc:'{!emailBcc} ',
        // subject:'{!subject} ',
        emailmsg: '{!replyMailId} '
    }
                               ,
                               "Lightning",
                               function (component) {
                                   
                               });
});
</script> -->
    <script>
        function complete1() {
            alert('Testing');
            CallApexMethod();
        }
        function hidePopup(){
            document.getElementById('modalPopup').style.display = 'none';
        }

        function showPopup() {
            document.getElementById('modalPopup').style.display = '';
        }
        function cacheFolder() {
            // console.log('caching');
            var folderField = document.getElementById('{!$Component.page.form.folder}');
            var folderId = folderField.options[folderField.selectedIndex].value;
            // console.log(folderId);
            window.localStorage.setItem('folderId', folderId);
        }
        function loadFolder() {
            // console.log('loading folder');
            var folderId = window.localStorage.getItem('folderId');
            // console.log(folderId);
            if (folderId) {
                var folderField = document.getElementById('{!$Component.page.form.folder}');
                // console.log(folderField);
                folderField.value = folderId;
                setFolderId(folderId);
            }
        }
    </script>

    <style>
        .custPopup {
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            height: 400px;
            left: 50%;
            overflow: scroll;
            padding: 10px;
            position: fixed;
            /* These are the 3 css properties you will need to change so the popup 
        displays in the center of the screen. First set the width. Then set 
        margin-left to negative half of what the width is. You can add 
        the height property for a fixed size pop up if you want.*/
            width: 500px;
            margin-left: -250px;
            top: 100px;
        }

        .popupBackground {
            background-color: black;
            opacity: 0.20;
            filter: alpha(opacity=20);
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 9998;
        }

        .border {
            border-style: hidden;
        }
    </style>




</apex:page>